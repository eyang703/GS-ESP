{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/irenalee/Documents/GS-ESP/eng-possibilities-ui-master/src/pages/Forecaster/index.js\";\nimport React from \"react\";\nimport Portfolio from \"../../components/Portfolio\";\nimport Widget from \"../../components/Widget\";\nimport './Forecaster.scss';\nimport \"react-vis/dist/style.css\";\nimport { makeWidthFlexible, makeHeightFlexible, XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, Crosshair } from 'react-vis';\n\nclass ForecasterHome extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      crosshairValues: []\n    };\n  }\n\n  render() {\n    const DATA = [[{\n      x: 0,\n      y: 10000\n    }, {\n      x: 1,\n      y: 11000\n    }, {\n      x: 2,\n      y: 10500\n    }, {\n      x: 3,\n      y: 10000\n    }, {\n      x: 4,\n      y: 12000\n    }, {\n      x: 5,\n      y: 13000\n    }, {\n      x: 6,\n      y: 15500\n    }, {\n      x: 7,\n      y: 14000\n    }, {\n      x: 8,\n      y: 16000\n    }, {\n      x: 9,\n      y: 17000\n    }, {\n      x: 10,\n      y: 17000\n    }]];\n    const FlexibleXYPlot = makeHeightFlexible(makeWidthFlexible(XYPlot));\n    var titles = ['Investment Forecaster', 'Predicted Amount', 'Dollar Increase', 'Percent Increase'];\n    var descriptions = ['This page allows you to customize your investments and view the potential growth of $10,000 over a period of 10 years', '$15,128', '+ $5,128', '51.28%'];\n    var isnum = [false, true, true, true];\n    var widgets = [];\n\n    for (var i = 0; i < titles.length; i++) {\n      widgets.push( /*#__PURE__*/_jsxDEV(Widget, {\n        title: titles[i],\n        description: descriptions[i],\n        isNum: isnum[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"portfolio-section\",\n            children: /*#__PURE__*/_jsxDEV(Portfolio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"not-portfolio-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"widgets-section\",\n              children: widgets\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"graph-section\",\n              children: /*#__PURE__*/_jsxDEV(FlexibleXYPlot, {\n                margin: {\n                  left: 70,\n                  right: 50,\n                  top: 10,\n                  bottom: 50\n                },\n                onMouseLeave: () => this.setState({\n                  crosshairValues: []\n                }),\n                children: [/*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n                  onNearestX: (value, {\n                    index\n                  }) => this.setState({\n                    crosshairValues: DATA.map(d => d[index])\n                  }),\n                  data: DATA[0],\n                  color: \"#6D9A7D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Crosshair, {\n                  values: this.state.crosshairValues\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default ForecasterHome;","map":{"version":3,"sources":["/Users/irenalee/Documents/GS-ESP/eng-possibilities-ui-master/src/pages/Forecaster/index.js"],"names":["React","Portfolio","Widget","makeWidthFlexible","makeHeightFlexible","XYPlot","XAxis","YAxis","HorizontalGridLines","LineSeries","Crosshair","ForecasterHome","Component","constructor","props","state","crosshairValues","render","DATA","x","y","FlexibleXYPlot","titles","descriptions","isnum","widgets","i","length","push","left","right","top","bottom","setState","value","index","map","d"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Portfolio from \"../../components/Portfolio\";\nimport Widget from \"../../components/Widget\";\nimport './Forecaster.scss'\nimport \"react-vis/dist/style.css\";\nimport {makeWidthFlexible, makeHeightFlexible, XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, Crosshair} from 'react-vis';\n\nclass ForecasterHome extends React.Component {\n  constructor(props) {\n      super();\n      this.state = {\n        crosshairValues: []\n      }\n  }\n\n  render() {\n    const DATA = [\n      [\n        {x: 0, y: 10000},\n        {x: 1, y: 11000},\n        {x: 2, y: 10500},\n        {x: 3, y: 10000},\n        {x: 4, y: 12000},\n        {x: 5, y: 13000},\n        {x: 6, y: 15500},\n        {x: 7, y: 14000},\n        {x: 8, y: 16000},\n        {x: 9, y: 17000},\n        {x: 10, y: 17000},\n      ],\n    ];\n\n    const FlexibleXYPlot = makeHeightFlexible(makeWidthFlexible(XYPlot))\n    var titles = ['Investment Forecaster', 'Predicted Amount', 'Dollar Increase', 'Percent Increase']\n    var descriptions = ['This page allows you to customize your investments and view the potential growth of $10,000 over a period of 10 years', '$15,128', '+ $5,128', '51.28%']\n    var isnum = [false, true, true, true]\n    var widgets = []\n    for (var i = 0; i < titles.length; i++) {\n      widgets.push(<Widget title={titles[i]} description={descriptions[i]} isNum={isnum[i]}/>)\n    }\n    return (\n      <>\n         <div>\n              <div>\n                <div class=\"portfolio-section\">\n                  <Portfolio/>\n                </div>\n                <div class=\"not-portfolio-section\">\n                  <div class=\"widgets-section\">\n                    {widgets}\n                  </div>\n                  <div class=\"graph-section\">\n                    <FlexibleXYPlot \n                    margin={{left: 70, right: 50, top: 10, bottom: 50}}\n                    onMouseLeave={() => this.setState({crosshairValues: []})}\n                    >\n                      <HorizontalGridLines />\n                      <LineSeries\n                        onNearestX={(value, {index}) =>\n                      this.setState({crosshairValues: DATA.map(d => d[index])})}\n                        data={DATA[0]} \n                        color=\"#6D9A7D\"/>\n                        <Crosshair values={this.state.crosshairValues}/>\n                      <XAxis />\n                      <YAxis />\n                    </FlexibleXYPlot>\n                  </div>\n                </div>\n              </div>\n            </div>\n      </>\n    );\n  }\n}\n\nexport default ForecasterHome;"]},"metadata":{},"sourceType":"module"}